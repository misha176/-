 private void x_plus(int start_x, int start_y)
        {
            
            Color col_pixel;
            bool run_x_p = true;
            do
            {
                start_x++;
                col_pixel = bitmap.GetPixel(start_x - 1, start_y);
                if (col_pixel != c_pixel_start & col_pixel != Color.Red || start_y + 3 > bitmap.Height || start_x + 3 > bitmap.Width || start_x - 3 < 0 || start_y - 3 < 0)
                {
                    run_x_p = false;
                    
                    break;
                }
                pixels.Add(new Pixel() { color = bitmap.GetPixel(start_x, start_y) });
                pixels.Add(new Pixel() { point = new Point() { X = start_x, Y = start_y } });
                y_plus(start_x, start_y);
                y_minus(start_x, start_y);
                //bitmap.SetPixel(start_x, start_y, Color.Red);

            } while (run_x_p);
        }
        private void x_minus(int start_x, int start_y)
        {
            Color col_pixel;
            bool run_x_m=true;

            do
            {
                start_x--;
                col_pixel = bitmap.GetPixel(start_x - 1, start_y);
                if (col_pixel != c_pixel_start & col_pixel != Color.Red || start_y + 3 > bitmap.Height || start_x + 3 > bitmap.Width || start_x - 3 < 0 || start_y - 3 < 0)
                {
                    run_x_m = false;
                    break;
                }
                pixels.Add(new Pixel() { color = bitmap.GetPixel(start_x, start_y) });
                pixels.Add(new Pixel() { point = new Point() { X = start_x, Y = start_y } });
                //bitmap.SetPixel(start_x, start_y, Color.Red);

                y_plus(start_x, start_y);
                y_minus(start_x, start_y);
            } while (run_x_m);
        }
        private void y_plus(int start_x, int start_y)
        {
            Color col_pixel;
            bool run_y_p = true;

            do
            {
                start_y++;
                col_pixel = bitmap.GetPixel(start_x, start_y - 1);
                if (col_pixel != c_pixel_start & col_pixel != Color.Red || start_y + 3 > bitmap.Height || start_x + 3 > bitmap.Width || start_x - 3 < 0 || start_y - 3 < 0)
                {
                    run_y_p = false;
                    break;
                }
                pixels.Add(new Pixel() { color = bitmap.GetPixel(start_x, start_y) });
                pixels.Add(new Pixel() { point = new Point() { X = start_x, Y = start_y } });
                //bitmap.SetPixel(start_x, start_y, Color.Red);
                //x_plus(start_x, start_y);
                //x_minus(start_x, start_y);
            } while (run_y_p);
        }
        private void y_minus(int start_x, int start_y)
        {
            Color col_pixel;
            bool run_y_m = true;
            do
            {
                start_y--;
                col_pixel = bitmap.GetPixel(start_x, start_y - 1);
                if (col_pixel != c_pixel_start & col_pixel != Color.Red || start_y + 3 > bitmap.Height || start_x + 3 > bitmap.Width || start_x - 3 < 0 || start_y - 3 < 0)
                {
                    run_y_m = false;
                    break;
                }
                pixels.Add(new Pixel() { color = bitmap.GetPixel(start_x, start_y) });
                pixels.Add(new Pixel() { point = new Point() { X = start_x, Y = start_y } });
                //bitmap.SetPixel(start_x, start_y, Color.Red);
                //x_plus(start_x, start_y);
                //x_minus(start_x, start_y);
            } while (run_y_m);
        }
        private void brush(int start_x, int start_y)
        {
            int x, y;
            x = start_x;
            y = start_y;
            x_plus(x, y);
            y_minus(x, y);
            x_minus(x, y);
            y_plus(x, y);
            
            foreach (Pixel aPixel in pixels)
            {
                bitmap.SetPixel(aPixel.point.X, aPixel.point.Y,Color.Red);
            }

        }